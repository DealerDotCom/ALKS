Table Name,Description,Columns,Datatype,Data reference,Example data,
accounts,This table stores AWS account related details including access key and secret key. ALKS admin enters accessKey and secretKey. ,id,String(Autogenerated),,,
,,accessKey,String,Entered by ALKS admin user,,
,,accountName,String,Automatically pulled from AWS account,,
,,accountNo,String,Automatically pulled from AWS account(Readonly),,
,,secretKey,String,Entered by ALKS admin user,,
,,user,String(Autogenerated),,,
,,date,DateTime,,,
,,active,Number,Activate(1) and Inactivate(0) accounts,,
accountrolepolicy,,,,,,
,This table stores unique ids that reference to role/account/policy record. ALKS admin?s creates new records by selecting list of roles for a particular selected AWS account and manually entering the policy string. ,id,String(Autogenerated),,,
,,role,String,Roles in respective AWS Account,,
,,accounts_accountNo,Number,References accountNo in accounts table,,
,,policy,String,Entered by ALKS admin user,,
,,user,String,,,
,,date,DateTime,,,
,,delete,Number,,,
accountidgroup,,,,,,
,This table has records that map role id?s to AD Groups. ALKS admin?s create new records by selecting an id from a select list of roles (roles are retrived by id?s filtered based on the account selected on UI) and selecting an AD group (all AD groups are pulled using service account and displayed on the UI) ,accountrolepolicy_id,String,,,
,,samaccountname,String,AD AWS groups retrived from AD using service account,,
,,user,String,,,
,,date,DateTime,,,
,,delete,Number,,,
,,,,,,
,,,,,,
,,,,,,
,,,,,,
,,,,,,
,,,,,,
,,,,,,
,,,,,,
,$('#businessListings div.listing').each(function() {,,,,,
,    alert('text: ' + $(this).find('p:first').text());,,,,,
,});,,,,,
